/* Variables */
:root {
  --width-localnav: 18.75rem;
  --width-sitemap-trigger: 2.8125rem;
  --offset-localnav: -calc(var(--width-localnav) + var(--width-sitemap-trigger));
}

/**
 * Local navigation
 */
.uomcontent .localnav {
  font-family: var(--ff-sans);
  color: var(--col-white);
  position: fixed;
  z-index: 15;

  &__panel {
    padding-right: var(--width-sitemap-trigger);
    background-color: var(--deprecated-col-menu);
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    right: -100%;
    top: 0;
    transform: translateX(0);
    transition: var(--tr-transform);
    width: 100%;

    &--nested {
      position: absolute;
    }

    /* hide sidebar of parent panels */
    &--nested-open {
      overflow: hidden;
    }

    /* show panel */
    &--open {
      transform: translateX(-100%);
    }
  }

  /* close and back buttons */
  /* HACK increase specificity to override `.button-ui`, which was part of the Buttons component until v6.0 */
  &__back-btn.localnav__back-btn {
    font-size: .75rem;
    padding: 1.25rem;
    background-color: color(var(--deprecated-col-menu) lightness(-3%));
    color: rgba(255, 255, 255, .7);
    display: block;
    font-weight: normal;
    line-height: 1.96;
    letter-spacing: .07em;
    text-align: left;
    text-transform: uppercase;
    width: 100%;

    &::before {
      font-size: 1.25rem;
      padding-right: .625rem;
      content: '\2039';
      float: left;
      font-weight: normal;
      line-height: 1;
    }

    &:hover,
    &:focus {
      color: inherit;

      &::before {
        animation: chevron-left 1s infinite ease-in-out;
      }
    }

    &:hover {
      text-decoration: underline;
    }
  }

  /* add chevron to nested panel triggers */
  &__nested-trigger {
    &::after {
      font-size: 1.5rem;
      content: '\203a';
      float: right;
      font-weight: 400;
      line-height: .85;
      z-index: 9;
    }
  }

  /* overrides for all lists */
  &__list,
  &__meta {
    color: inherit;
    margin: 0;
    max-width: none;

    & > li {
      color: inherit;
      display: block;
      list-style-type: none;
      margin: 0;
      max-width: none;
      padding: 0;
      width: auto;
    }

    a {
      letter-spacing: .0625rem;
      color: inherit;
      display: block;
      outline-offset: -1px;
      text-decoration: none;

      &:hover,
      &:focus {
        color: var(--col-white);
      }

      &:hover {
        text-decoration: underline;
      }
    }
  }

  /* root and nested nav lists */
  &__list {
    border-bottom: 1px solid rgba(255, 255, 255, .1);
    padding: 0;

    & > li {
      border-top: 1px solid rgba(255, 255, 255, .1);
    }

    a {
      font-size: .875rem;
      padding: 1.25rem;

      &:hover,
      &:focus {
        background-color: color(var(--deprecated-col-menu) lightness(-3%));
        color: var(--col-white);
      }
    }
  }

  /* meta menu */
  &__meta {
    padding: 1.25rem 0;
    color: rgba(255, 255, 255, .7);

    a {
      font-size: .8125rem;
      padding: .25rem 1.25rem;
    }
  }

  /* show local nav */
  &.active {
    transform: translateX(-100%);
  }

  @media screen and (--bp-tablet) {
    /* switch to fixed width */
    right: var(--offset-localnav);
    width: var(--width-localnav);

    /* now that width is fixed, switch to margin so that sitemap link doesn't hide panel scrollbars */
    margin-right: var(--width-sitemap-trigger);
    &__panel { padding-right: 0; }

    &.active {
      box-shadow: 1px 0 12px 3px rgba(0, 0, 0, .6);
      transform: translateX(var(--offset-localnav));
    }
  }

  .no-js & {
    @mixin injection-wrapper;
    background-color: var(--deprecated-col-navy);
    box-shadow: 0 0 0;
    display: block;
    position: static;
    width: auto;
  }
}

@keyframes chevron-left {
  0% { transform: translateX(0); }
  50% { transform: translateX(-5px); }
}
