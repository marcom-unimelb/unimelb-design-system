/**
 * Variables
 */
:root {
  /* Colours */
  --col-black-dark: #000000;
  --col-black-light: #ebecec;
  --col-primary-light-grey: #f7f7f7;
  --col-secondary-mid-grey: #e4e4e4;
  --col-black-mid-1: #c6c8ca;
  --col-black-mid-2: #99a2aa;
  --col-blue-dark: #35659e;
  --col-blue-light: #cde6ff;
  --col-blue-mid-1: #adcdf0;
  --col-blue-mid-2: #4074b2;
  --col-emerald-dark: #22765f;
  --col-emerald-light: #d5f2e6;
  --col-emerald-mid-1: #98d6c3;
  --col-emerald-mid-2: #59b17f;
  --col-green-dark: #467749;
  --col-green-light: #f3f8d7;
  --col-green-mid-1: #dae299;
  --col-green-mid-2: #a1d172;
  --col-navy-light: #f2f5f9;
  --col-navy-main: #094183;
  --col-navy-mid-1: #abbed5;
  --col-navy-mid-2: #5d82ad;
  --col-secondary-navy: #033a7b;
  --col-tertiary-navy: #012a58;
  --col-orange-dark: #b93d1c;
  --col-orange-light: #ffdcba;
  --col-orange-mid-1: #ffa478;
  --col-orange-mid-2: #e77052;
  --col-pink-dark: #984140;
  --col-pink-light: #ffdfe6;
  --col-pink-mid-1: #ffbdcc;
  --col-pink-mid-2: #ee8889;
  --col-primary-navy: #094183;
  --col-purple-dark: #5760a4;
  --col-purple-light: #dee0f8;
  --col-purple-mid-1: #b0bce1;
  --col-purple-mid-2: #7283bf;
  --col-teal-dark: #02707f;
  --col-teal-light: #cbe8ef;
  --col-teal-light: #cbe8ef;
  --col-teal-mid-1: #7cbdce;
  --col-teal-mid-2: #3fa7c2;
  --col-white: #ffffff;
  --col-yellow-light: #fdf2df;
  --col-yellow-mid-1: #ffdca2;
  --col-yellow-mid-2: #ecae65;

  /* Unsanctioned colours to meet accesibility requirements */
  --col-unsanctioned-black-mid-3: #777;

  /* Layout widths */
  --w-sml: 43.75rem;
  --w-mid: 56.25rem;
  --w-lge: 87.5rem;

  /* Font stacks */
  --ff-sans: "Source Sans Pro", Gill Sans, Trebuchet MS, Arial, sans-serif;
  --ff-fixed: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier, monospace;
  --ff-serif: "Noto Serif", Georgia, Times New Roman, serif;

  /* Font weights */
  --fw-light: 300;
  --fw-regular: 400;
  --fw-semibold: 600;
  --fw-bold: 700;

  /* Transitions */
  --tr-transform: transform .3s ease;

  /* Stacking */
  --z-below: -1;
  --z-default: 1;
  --z-navigation: 100;
  --z-overlay: 500;
  --z-modal: 1000;
  --z-apex: 10000;
}


/**
 * Breakpoints
 */
@custom-media --bp-max-mobile (max-width: 480px);
@custom-media --bp-max-x-mobile (max-width: 599px);

@custom-media --bp-tablet (min-width: 481px);
@custom-media --bp-x-tablet (min-width: 600px);
@custom-media --bp-max-tablet (max-width: 768px);
@custom-media --bp-only-tablet (min-width: 481px) and (max-width: 768px);

@custom-media --bp-desktop (min-width: 769px);
@custom-media --bp-x-desktop (min-width: 900px);
@custom-media --bp-max-desktop (max-width: 1098px);
@custom-media --bp-only-desktop (min-width: 769px) and (max-width: 1098px);

@custom-media --bp-wide (min-width: 1099px);
@custom-media --bp-x-wide (min-width: 1250px);
@custom-media --bp-xx-wide (min-width: 1400px);

@custom-media --bp-height-smallest (min-height: 620px);
@custom-media --bp-height-small (min-height: 700px);
@custom-media --bp-height-medium (min-height: 850px);
@custom-media --bp-height-big (min-height: 1200px);


/**
 * Mixins
 */

/* Micro clearfix */
/* http://nicolasgallagher.com/micro-clearfix-hack/ */
@define-mixin clearfix {
  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

@define-mixin wrapper {
  margin: 0 auto;
  padding: 0 3%;
  width: 94%;

  @media screen and (--bp-tablet) {
    max-width: var(--w-lge);
  }

  @media screen and (--bp-desktop) {
    width: 100%;
  }
}

@define-mixin injection-wrapper {
  max-width: pxtorem(1400);
  padding: pxtorem(15);
  margin: 0 auto;
}

@define-mixin grad-bottom {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .9) 100%); /* W3C */
}

@define-mixin grad-top {
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .9) 100%); /* W3C */
}

@define-mixin grad-left {
  background: linear-gradient(to left, color(var(--col-blue-mid-2) alpha(0%)) 66%, color(var(--col-blue-mid-2) alpha(90%)) 100%); /* W3C */
}

@define-mixin imgreplace {
  background-color: transparent;
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover;
}

@define-mixin normalise {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Prevent wrap and add ellipsis if overflow */
@define-mixin ellipsis {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Fallback avatar (used in People and Seach components) */
@define-mixin fallbackAvatar {
  position: relative;

  /* Fallback avatar for when the photo fails to load */
  &::before {
    background: url(../components/people/avatar-lt.png) no-repeat center / cover transparent;
    border-radius: 50%;
    content: "";
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: var(--z-below); /* position the fallback below the photo so it is hidden when the photo exists */
  }
}

/* The photo's wrapper must extend this placeholder to allow for the fallback avatar to */
/* appear underneath the photo when the latter loads successfully. */
@define-mixin fallbackAvatarWrapper {
  position: relative;
  z-index: var(--z-default);
}

/* Hide only visually, but have it available for screenreaders */
/* Parent element should have `overflow: hidden;` and `position: relative;` to solve outline bug in Chrome */
/* http://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
/* http://stackoverflow.com/questions/3970455/overflow-hidden-not-working */
@define-mixin screenreaders-only {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
  width: 1px;
}

/* Remove text for image replacement */
@define-mixin hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

/*
 * Reset inner lists.
 * For list components that may contain base lists - e.g. `ol.steps`, `ul.accordion`
 */
@define-mixin inner-list-reset {
  & > ol,
  & > ul {
    padding-top: 0;
    padding-bottom: pxtorem(24);
  }
}
